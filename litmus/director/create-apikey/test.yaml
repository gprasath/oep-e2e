---
- hosts: localhost
  connection: local

  vars_files:
    - test_vars.yml

  tasks:
    - block:

          ## Generating the testname for deployment
        - include_tasks: /ansible-utils/create_testname.yml

          ## RECORD START-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /ansible-utils/update_litmus_result_resource.yml
          vars:
            status: 'SOT'
        
        - name : Check new user signup
          uri:
            url: "{{ director_url }}/v3/localAuthConfig"
            method: POST
            body_format: json
            body:
              {"firstName": "{{ firstname }}", "lastName": "{{ surname }}", "password": {"publicValue": "{{ username }}", "secretValue": "{{ password }}" }} 
            status_code: 201
          register: signup

        - set_fact: 
            jwt: "{{ signup.json.jwt }}"
            accountId: "{{ signup.json.accountId }}"

        - name: Fetch email of user
          uri:
            url: "{{ director_url }}/v3/accounts/{{ accountId }}"
            url_username: "{{username}}"
            url_password: "{{password}}"
            method: GET
            status_code: 200
          register: user_details

        - set_fact: 
            user_email: "{{user_details.json.email}}"

        - name : Change value for onboardingStatus
          uri:
            url: "{{ director_url }}/v3/accounts/{{ accountId }}"
            url_username: "{{username}}"
            url_password: "{{password}}"
            method: PUT
            body_format: json
            body:
              {"firstName":"{{ firstname }}", "lastName":"{{ surname }}","email":"{{ user_email }}", "onboardingStatus":3}
            status_code: 200
          register: onboarding_status

        #- set_fact:
        #    token_template: "token={{ jwt }}; authProvider=localAuthConfig;"
        
        - set_fact:
             data: "{\"name\":\"{{ apikey }}\"}"

        - name: Creating new api key
          #shell: curl -X POST -d "{{ data }}"  -H Cookie:"{{ token_template }}"  "{{ director_url }}/v3/apikey"
          shell: python3 /api_testing/api-key/api-key.py --url {{ director_url }} --token {{ jwt }}
          register: credentials

        - set_fact:
            username: "{{ credentials.stdout_lines[0] }}"
            password: "{{ credentials.stdout_lines[1] }}"

        - name : Search user account created 
          uri:
            url: "{{ director_url }}/v3/accounts/{{ accountId }}/?searchuser"
            user: "{{ username }}"
            password: "{{ password }}"
            method: GET
            body_format: json
            status_code: 200
          register: search
        
        - name: Create a kubernetes secret 
          shell: kubectl create secret generic director-user-pass --from-literal=username={{ username }} --from-literal=password={{ password }} -n litmus

        - set_fact:
            flag: "Pass"

      rescue:
        - name: Setting fail flag
          set_fact:
            flag: "Fail"

      always:
        ## RECORD END-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /ansible-utils/update_litmus_result_resource.yml
          vars:
            status: 'EOT'
